name: Build and Deploy Docker to AWS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS credentials for session
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set aws_session_token $AWS_SESSION_TOKEN
          aws configure set region $AWS_DEFAULT_REGION

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

      - name: Build Docker image
        run: docker build -t my-docker-app .

      - name: Tag Docker image
        run: docker tag my-docker-app:latest ${{ secrets.ECR_REPOSITORY }}:latest

      - name: Push Docker image to Amazon ECR
        run: docker push ${{ secrets.ECR_REPOSITORY }}:latest


  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Copy PEM file
        env:
          PEM_FILE: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        run: |
          echo "$PEM_FILE" > ~/ec2-key.pem
          chmod 400 ~/ec2-key.pem  # Ensure correct permissions

      - name: Deploy Docker Image to EC2
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          EC2_INSTANCE_DNS: ${{ secrets.EC2_INSTANCE_DNS }}  # Ensure this is correctly set
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/ec2-key.pem ubuntu@$EC2_INSTANCE_DNS << 'EOF'
          # Update package list and install AWS CLI and Docker
          sudo apt update
          sudo apt install -y awscli docker.io
          
          # Start Docker service
          sudo systemctl start docker
          sudo systemctl enable docker
  
          # Log in to ECR and deploy the Docker image
          $(aws ecr get-login --no-include-email --region '"${{ secrets.AWS_REGION }}"')
          docker pull ${{ secrets.ECR_REPOSITORY }}:latest
          docker stop my-docker-app || true
          docker rm my-docker-app || true
          docker run -d --name my-docker-app -p 80:80 ${{ secrets.ECR_REPOSITORY }}:latest
          EOF